name: Deploy to Amazon ECS

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  CLUSTER_NAME: challenge-alegra-cluster
  IMAGE_TAG_ORDERS: ${{ vars.IMAGE_TAG_ORDERS }}
  IMAGE_TAG_INVENTORY: ${{ vars.IMAGE_TAG_INVENTORY }}
  IMAGE_TAG_KITCHEN: ${{ vars.IMAGE_TAG_KITCHEN }}
  REPOSITORY_NAME: alegra-challenge

jobs:
  deploy:
    name: Deploy Services
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js and pnpm
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Set up pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10

      - name: Enable corepack
        run: corepack enable

      - name: Install dependencies
        run: pnpm install --recursive

      - name: Run tests for orders-app
        run: pnpm --filter orders-app test

      - name: Run tests for kitchen-app
        run: pnpm --filter kitchen-app test

      - name: Run tests for inventory-app
        run: pnpm --filter inventory-app test


      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Push Docker images
        env:
          ECR_REGISTRY: ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
        run: |
          # Build and push orders-app
          docker build -t $ECR_REGISTRY/$REPOSITORY_NAME:${{ env.IMAGE_TAG_ORDERS }} ./orders-app
          docker push $ECR_REGISTRY/$REPOSITORY_NAME:${{ env.IMAGE_TAG_ORDERS }}

          # Build and push kitchen-app
          docker build -t $ECR_REGISTRY/$REPOSITORY_NAME:${{ env.IMAGE_TAG_KITCHEN }} ./kitchen-app
          docker push $ECR_REGISTRY/$REPOSITORY_NAME:${{ env.IMAGE_TAG_KITCHEN }}

          # Build and push inventory-app
          docker build -t $ECR_REGISTRY/$REPOSITORY_NAME:${{ env.IMAGE_TAG_INVENTORY }} ./inventory-app
          docker push $ECR_REGISTRY/$REPOSITORY_NAME:${{ env.IMAGE_TAG_INVENTORY }}

      - name: Replace AWS Logs Region in Task Definitions
        run: |
          sed -i 's|"awslogs-region": "TO_BE_REPLACED"|"awslogs-region": "'${{ env.AWS_REGION }}'"|' .github/workflows/ecs-tasks/orders-task-def.json
          sed -i 's|"awslogs-region": "TO_BE_REPLACED"|"awslogs-region": "'${{ env.AWS_REGION }}'"|' .github/workflows/ecs-tasks/inventory-task-def.json
          sed -i 's|"awslogs-region": "TO_BE_REPLACED"|"awslogs-region": "'${{ env.AWS_REGION }}'"|' .github/workflows/ecs-tasks/kitchen-task-def.json

      # ðŸ”¹ Renderizar task definitions
      - name: Render Orders Task Definition
        id: render_orders
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: .github/workflows/ecs-tasks/orders-task-def.json
          container-name: orders-app
          image: ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.REPOSITORY_NAME }}:${{ env.IMAGE_TAG_ORDERS }}

      - name: Render Kitchen Task Definition
        id: render_kitchen
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: .github/workflows/ecs-tasks/kitchen-task-def.json
          container-name: kitchen-app
          image: ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.REPOSITORY_NAME }}:${{ env.IMAGE_TAG_KITCHEN }}

      - name: Render Inventory Task Definition
        id: render_inventory
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: .github/workflows/ecs-tasks/inventory-task-def.json
          container-name: inventory-app
          image: ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.REPOSITORY_NAME }}:${{ env.IMAGE_TAG_INVENTORY }}

      # ðŸ”¹ Desplegar los servicios en ECS
      - name: Deploy orders-app to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          cluster: ${{ env.CLUSTER_NAME }}
          service: orders-service
          task-definition: ${{ steps.render_orders.outputs.task-definition }}
          wait-for-service-stability: true

      - name: Deploy kitchen-app to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          cluster: ${{ env.CLUSTER_NAME }}
          service: kitchen-service
          task-definition: ${{ steps.render_kitchen.outputs.task-definition }}
          wait-for-service-stability: true

      - name: Deploy inventory-app to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          cluster: ${{ env.CLUSTER_NAME }}
          service: inventory-service
          task-definition: ${{ steps.render_inventory.outputs.task-definition }}
          wait-for-service-stability: true
